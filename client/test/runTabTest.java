/*
 * runTabTest.java
 *
 * Created on November 12, 2008, 12:11 PM
 */

package edu.stanford.atom.sti.client.gui.RunTab;

import org.omg.CORBA.*;
import edu.stanford.atom.sti.client.comm.corba.*;
import javax.swing.*;

/**
 *
 * @author  Owner
 */
public class runTabTest extends javax.swing.JFrame {
    
    /** Creates new form runTabTest */
    public runTabTest() {
        getCorbaRefs("localhost", "2809");
        
        initComponents();        
    }
    
    private String ipAddress;
    private String portNumber;
    private ORB orb;
    
    private ExpSequence expSequence;
    private Parser parser;
    
        
    public void getCorbaRefs(String IPAddress, String PortNumber) {

        ipAddress = IPAddress;
        portNumber = PortNumber;

        try {
            String[] extendedArgs = {"-ORBInitialPort", portNumber, "-ORBInitialHost", ipAddress};
            // create and initialize the ORB
            orb = ORB.init(extendedArgs, null);

            org.omg.CORBA.Object expSeqObj = orb.string_to_object(
                    "corbaname::" + ipAddress + ":" + portNumber +
                    "#STI/Client/ExpSequence.Object");
            
            expSequence = ExpSequenceHelper.narrow(expSeqObj);
            
            org.omg.CORBA.Object parserObj = orb.string_to_object(
                    "corbaname::" + ipAddress + ":" + portNumber +
                    "#STI/Client/Parser.Object");
            
            parser = ParserHelper.narrow(parserObj);

        } catch (Exception e) {
            System.out.println("ERROR : " + e);
            e.printStackTrace(System.out);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        runTab1 = new edu.stanford.atom.sti.client.gui.RunTab.RunTab(expSequence, parser);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(runTab1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(runTab1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception unused) {
            unused.printStackTrace(); // Ignore exception because we can't do anything.  Will use default.
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new runTabTest().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private edu.stanford.atom.sti.client.gui.RunTab.RunTab runTab1;
    // End of variables declaration//GEN-END:variables
    
}
