package edu.stanford.atom.sti.client.comm.corba;


/**
* edu/stanford/atom/sti/client/comm/corba/TChannelHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ./client.idl
* Sunday, August 10, 2008 10:54:00 AM PDT
*/

abstract public class TChannelHelper
{
  private static String  _id = "IDL:STI_Client_Server/TChannel/TChannel:1.0";

  public static void insert (org.omg.CORBA.Any a, edu.stanford.atom.sti.client.comm.corba.TChannel that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static edu.stanford.atom.sti.client.comm.corba.TChannel extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [5];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = edu.stanford.atom.sti.device.comm.corba.TDeviceHelper.type ();
          _members0[0] = new org.omg.CORBA.StructMember (
            "device",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_ushort);
          _members0[1] = new org.omg.CORBA.StructMember (
            "channel",
            _tcOf_members0,
            null);
          _tcOf_members0 = edu.stanford.atom.sti.device.comm.corba.TChannelTypeHelper.type ();
          _members0[2] = new org.omg.CORBA.StructMember (
            "type",
            _tcOf_members0,
            null);
          _tcOf_members0 = edu.stanford.atom.sti.device.comm.corba.TDataHelper.type ();
          _members0[3] = new org.omg.CORBA.StructMember (
            "inputType",
            _tcOf_members0,
            null);
          _tcOf_members0 = edu.stanford.atom.sti.device.comm.corba.TValueHelper.type ();
          _members0[4] = new org.omg.CORBA.StructMember (
            "outputType",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (edu.stanford.atom.sti.client.comm.corba.TChannelHelper.id (), "TChannel", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static edu.stanford.atom.sti.client.comm.corba.TChannel read (org.omg.CORBA.portable.InputStream istream)
  {
    edu.stanford.atom.sti.client.comm.corba.TChannel value = new edu.stanford.atom.sti.client.comm.corba.TChannel ();
    value.device = edu.stanford.atom.sti.device.comm.corba.TDeviceHelper.read (istream);
    value.channel = istream.read_ushort ();
    value.type = edu.stanford.atom.sti.device.comm.corba.TChannelTypeHelper.read (istream);
    value.inputType = edu.stanford.atom.sti.device.comm.corba.TDataHelper.read (istream);
    value.outputType = edu.stanford.atom.sti.device.comm.corba.TValueHelper.read (istream);
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, edu.stanford.atom.sti.client.comm.corba.TChannel value)
  {
    edu.stanford.atom.sti.device.comm.corba.TDeviceHelper.write (ostream, value.device);
    ostream.write_ushort (value.channel);
    edu.stanford.atom.sti.device.comm.corba.TChannelTypeHelper.write (ostream, value.type);
    edu.stanford.atom.sti.device.comm.corba.TDataHelper.write (ostream, value.inputType);
    edu.stanford.atom.sti.device.comm.corba.TValueHelper.write (ostream, value.outputType);
  }

}
