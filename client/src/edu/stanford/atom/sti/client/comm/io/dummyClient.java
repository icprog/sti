/*
 * dummyClient.java
 *
 * Created on August 13, 2008, 12:53 AM
 */

package edu.stanford.atom.sti.client.comm.bl;

import edu.stanford.atom.sti.client.gui.DeviceManager.*;
import edu.stanford.atom.sti.client.comm.corba.*;
import org.omg.CosNaming.*;
import org.omg.CosNaming.NamingContextPackage.*;
import org.omg.CORBA.*;

import javax.swing.*;

/**
 *
 * @author  Jason
 */
public class dummyClient extends javax.swing.JFrame {
    
    private String hostAddr = "EpDesktop1";
    private String corbaServerPort = "2809";
    private DeviceConfigure deviceConfigure;
    private ORB orb;
        
    /** Creates new form dummyClient */
    public dummyClient() {
        
        try {
            String[] extendedArgs = {"-ORBInitialPort", corbaServerPort, "-ORBInitialHost", hostAddr};
            // create and initialize the ORB
            orb = ORB.init(extendedArgs, null);
               
            org.omg.CORBA.Object deviceObj = orb.string_to_object(
                    "corbaname::" + hostAddr + ":" + corbaServerPort + 
                    "#STI/Client/DeviceConfigure.Object");    
            deviceConfigure = DeviceConfigureHelper.narrow(deviceObj);

        } catch (Exception e) {
            System.out.println("ERROR : " + e);
            e.printStackTrace(System.out);
        }        
        
        initComponents();
        
        sTIDeviceManager1.setDeviceConfigure(deviceConfigure);
        
    }
   
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sTIDeviceManager1 = new edu.stanford.atom.sti.client.gui.DeviceManager.STIDeviceManager();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sTIDeviceManager1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sTIDeviceManager1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception unused) {
            unused.printStackTrace(); // Ignore exception because we can't do anything.  Will use default.
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dummyClient().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private edu.stanford.atom.sti.client.gui.DeviceManager.STIDeviceManager sTIDeviceManager1;
    // End of variables declaration//GEN-END:variables
    
}
